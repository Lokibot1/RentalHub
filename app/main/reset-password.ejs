<link rel="web icon" type="png" href="images/webicon.png">
<link rel="stylesheet" href="css/reset-password.css">

<nav class="navbar">
    <a href="/" class="logo">
        <span class="rental">Rental</span><span class="hub">Hub</span>
    </a>
</nav>

<body>
    <div class="reset-container">
        <h2>Forgot Password</h2>
        <p>Reset password to access your account</p>
        
        <div id="error-message" class="error-message"></div>
        <div id="success-message" class="success-message"></div>
        
        <div class="password-box">
            <input type="password" name="new-password" id="new-password" 
                   placeholder="Password" required oninput="handlePasswordInput('new-password')">
            <span class="toggle-password" onclick="togglePassword('new-password')" id="toggle-new-password"></span>
        </div>
        
        <div class="password-box">
            <input type="password" name="confirm-password" id="confirm-password" 
                   placeholder="Confirm New Password" required oninput="handlePasswordInput('confirm-password')">
            <span class="toggle-password" onclick="togglePassword('confirm-password')" id="toggle-confirm-password"></span>
        </div>
        
        <button id="continue-button" class="btn primary">CONTINUE</button>
        <button id="cancel-button" class="btn secondary">CANCEL</button>
        
        <p class="remember-account">Remember your Account?</p>
        <button id="login-button" class="btn login">LOG IN</button>
    </div>

    <script>
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            if (field) {
                field.type = field.type === "password" ? "text" : "password";
            }
        }

        function handlePasswordInput(fieldId) {
            const field = document.getElementById(fieldId);
            const toggle = document.getElementById(`toggle-${fieldId}`);

            if (field && toggle) {
                if (field.value.length > 0) {
                    toggle.style.display = "block";
                } else {
                    toggle.style.display = "none";
                }
            }
        }

        function getUrlParams() {
            const params = {};
            const queryString = window.location.search.substring(1);
            const pairs = queryString.split('&');
            
            for (let i = 0; i < pairs.length; i++) {
                const pair = pairs[i].split('=');
                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');
            }
            
            return params;
        }

        document.getElementById('continue-button').addEventListener('click', function() {
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            const errorMessage = document.getElementById('error-message');
            const successMessage = document.getElementById('success-message');
            
            errorMessage.style.display = 'none';
            successMessage.style.display = 'none';

            if (!newPassword || !confirmPassword) {
                errorMessage.textContent = 'Please fill in all fields';
                errorMessage.style.display = 'block';
                return;
            }
            
            if (newPassword !== confirmPassword) {
                errorMessage.textContent = 'Passwords do not match';
                errorMessage.style.display = 'block';
                return;
            }

            const params = getUrlParams();
            const token = params.token;
            const email = params.email;
            
            if (!token || !email) {
                errorMessage.textContent = 'Invalid password reset link';
                errorMessage.style.display = 'block';
                return;
            }
            
            fetch('http://localhost:8000/api/user/reset-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    email: email,
                    token: token,
                    newPassword: newPassword
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    successMessage.textContent = 'Password updated successfully!';
                    successMessage.style.display = 'block';
                    
                    setTimeout(function() {
                        window.location.href = '/login';
                    }, 2000);
                } else {
                    errorMessage.textContent = data.message || 'Failed to reset password';
                    errorMessage.style.display = 'block';
                }
            })
            .catch(error => {
                errorMessage.textContent = 'An error occurred. Please try again.';
                errorMessage.style.display = 'block';
                console.error('Error:', error);
            });
        });

        document.getElementById('cancel-button').addEventListener('click', function() {
            window.location.href = '/login';
        });

        document.getElementById('login-button').addEventListener('click', function() {
            window.location.href = '/login';
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Check for token and email in URL
            const params = getUrlParams();
            if (!params.token || !params.email) {
                const errorMessage = document.getElementById('error-message');
                errorMessage.textContent = 'Invalid password reset link';
                errorMessage.style.display = 'block';
                
                // Disable the continue button
                document.getElementById('continue-button').disabled = true;
            }
        });
    </script>