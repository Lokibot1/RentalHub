<!-- Place here your css styles -->
<link rel="stylesheet" href="/css/shopping.css"/>
<link rel="web icon" type="png" href="images/webicon.png">
<!-- Body -->

<!--Navigation Bar-->
<nav>
    <a href="/">
        <div class="logo">
            <h1>Rental <span> Hub</span></h1>
        </div>
    </a>

    <div class="search-wrapper">
        <input type="search" id="search" placeholder="Search for items" class="search-input"/>
        <button id="search-button"><img src="/images/search.png"/></button>
    </div>


    <ul>
        <li><a href="/">Home</a></li>
        <li>
            <% if (isAuthenticated && role === 'admin' ) { %>
                <a href="/admin/listing">
                    <img src="/images/blueAdd.png" class="add-icon"/>
                </a>
            <% } else if (isAuthenticated && role === 'user' ) { %>
                <a href="/user/listing">
                    <img src="/images/blueAdd.png" class="add-icon"/>
                </a>
            <% } else { %>
            <% } %>
        </li>
        <li>
            <% if (isAuthenticated && role === 'admin' ) { %>
                <a href='/admin/admin-dashboard'>
                    <img src="/images/blueProfile.png" alt="Profile" class="profile-icon"/>
                </a>
            <% } else if (isAuthenticated && role === 'user' ) { %>
                <a href='/user/profile'>
                    <img src="/images/blueProfile.png" alt="Profile" class="profile-icon"/>
                </a>
            <% } else { %>
                <a href="/login">
                    <img src="/images/blueProfile.png" alt="Profile" class="profile-icon"/>
                </a>
            <% } %>
        </li>
    </ul>
</nav>

<!-- Categories -->
<div class="categories-cont">
    <button class="category active" onclick="openCategory('events-and-parties')">
        Events & Parties
    </button>

    <button class="category" onclick="openCategory('tech-and-gadgets')">
        Tech & Gadgets
    </button>

    <button class="category" onclick="openCategory('clothing-and-accessories')">
        Clothing & Accessories
    </button>

    <button class="category" onclick="openCategory('sports-and-outdoor-gear')">
        Sports & Outdoor Gear
    </button>

    <button class="category" onclick="openCategory('tools-and-equipment')">
        Tools & Equipment
    </button>

    <button class="category" onclick="openCategory('musical-instruments')">
        Musical Instruments
    </button>

    <button class="category" onclick="openCategory('home-and-office')">
        Home & Office
    </button>

    <button class="category" onclick="openCategory('pets-accessories')">
        Pets Accessories
    </button>
    <button class="category" onclick="openCategory('books-and-literature')">
        Books and Literature
    </button>
</div>

<!-- Tabs -->
<div id="shopping-container"></div>


<!--Scripts-->
<script>
    const searchInput = document.getElementById("search");
    const searchButton = document.getElementById("search-button");
    const shoppingContainer = document.getElementById("shopping-container");
    const categoriesContainer = document.querySelector(".categories-cont");

    // Fetch items based on category ID
    async function fetchItems(categoryId) {
        try {
            const response = await fetch(`/api/shared/items/${categoryId}`);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();

            shoppingContainer.innerHTML = "";

            if (data.success && data.data.length > 0) {
                displayItems(data.data);

                // if (searchQuery) {
                //     const resultCount = data.data.length;
                //     const searchMessage = document.createElement("div");
                //     searchMessage.className = "search-results-message";
                //     searchMessage.innerHTML = `<p>Showing ${resultCount} result${resultCount !== 1 ? 's' : ''} for "${searchQuery}"</p>`;
                //
                //     // Clear Search Button
                //     const clearButton = document.createElement("button");
                //     clearButton.className = "clear-search";
                //     clearButton.innerText = "Clear Search";
                //     clearButton.addEventListener("click", function () {
                //         searchInput.value = "";
                //         fetchItems("");
                //     });
                //
                //     searchMessage.appendChild(clearButton);
                //     shoppingContainer.insertBefore(searchMessage, shoppingContainer.firstChild);
                // }
            } else {
                shoppingContainer.innerHTML = `<p>No items found matching your search.</p>`;
            }
        } catch (error) {
            console.error("Error fetching data:", error);
            shoppingContainer.innerHTML = "<p>Error loading items. Please try again later.</p>";
        }
    }

    // Search items based on user input
    async function searchItems(query) {
        try {
            const response = await fetch(`/api/shared/items/search?keyword=${encodeURIComponent(query)}`);

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const { data: items, success } = await response.json();

            if (success && items.length > 0) {
                displayItems(items)
            } else {
                shoppingContainer.innerHTML = "<p>No items found matching your search.</p>";
            }
        } catch (error) {
            console.error("Error fetching data:", error);
            shoppingContainer.innerHTML = "<p>Error loading items. Please try again later.</p>";
        }
    }

    function displayItems(items) {
        shoppingContainer.innerHTML = "";

        if (!items.length) {
            shoppingContainer.innerHTML = "<p>No items found matching your search.</p>";
            return;
        }

        let shoppingList = document.createElement("ul");
        shoppingList.className = "shoppingList";

        items.forEach(item => {
            if (item.quantity <= 0) return;

            let li = document.createElement("li");
            li.className = "shoppingItem";
            li.innerHTML = `
            <img src="/uploads/${item.image}" alt="Item Image" class="itemImage">
            <br>
            ${item.name}
            <br><br>
            ${item.location}
            <br><br>
            <div class="item-price-quantity">
                â‚± ${item.price} per day

                <p class="item-quantity"> ${item.quantity} left</p>
            </div>
        `;

            li.addEventListener("click", function () {
                localStorage.setItem("selectedItem", JSON.stringify(item));
                window.location.href = `/user/view-product/${item.id}`;
            });

            shoppingList.appendChild(li);
        });

        shoppingContainer.appendChild(shoppingList);
    }

    searchButton.addEventListener("click", function () {
        searchItems(searchInput.value.trim());
    });

    // Clear the search field
    // TODO: fix bug when clearing the search field
    searchInput.addEventListener('search', function () {
        if (searchInput.value === '') {
            // Clear the search input
            searchInput.value = '';

            // Show the categories container
            categoriesContainer.style.display = 'flex'

            fetchItems(getCategoryId("events-and-parties"))
        }
    })

    searchInput.addEventListener('keypress', function (e) {
        if (e.key === "Enter") {
            // Hide the categories container
            categoriesContainer.style.display = 'none'

            searchItems(searchInput.value.trim())
        }
    });

    // Upon loading display the first category
    fetchItems(getCategoryId("events-and-parties"))


    // Tabs Functionality
    function openCategory(categoryName) {
        // This updates the URL in the address bar without reloading the page
        const currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set('category', categoryName);

        window.history.replaceState({}, '', currentUrl);

        // Add active class to the clicked button when the category name in url matches
        const currentCategory = currentUrl.searchParams.get('category');

        const categoryButtons = document.querySelectorAll('.category');

        categoryButtons.forEach(button => {
            const onclickAttr = button.getAttribute('onclick');
            const match = onclickAttr.match(/openCategory\('(.+)'\)/);

            if (match) {
                const buttonCategory = match[1];

                if (buttonCategory === currentCategory) {
                    button.classList.add('active');
                } else {
                    button.classList.remove('active');
                }
            }
        });

        // Get items for the selected category
        fetchItems(getCategoryId(categoryName));
    }

    // Set the active category based on URL path
    document.addEventListener("DOMContentLoaded", function () {
        const path = window.location.pathname;
        const category = path.split("/").pop();

        if (category) {
            // Hide all shoppingContainers
            document.querySelectorAll(".shoppingContainer").forEach((container) => {
                container.style.display = "none";
            });

            // Show the selected category container
            const selectedContainer = document.getElementById(category);
            if (selectedContainer) {
                selectedContainer.style.display = "block";
            } else {
                console.error(`No element found with ID: ${category}`);
            }

            // Remove active class from all buttons
            document.querySelectorAll(".category").forEach((button) => {
                button.classList.remove("active");
            });

            // Add active class to the button corresponding to the category
            const activeButton = document.querySelector(`.category[onclick="openCategory('${category}')"]`);
            if (activeButton) {
                activeButton.classList.add("active");
            } else {
                console.error(`No button found for category: ${category}`);
            }
        } else {
            // Default to the first category if no category is specified
            const defaultCategory = document.querySelector(".category").getAttribute("onclick").match(/'([^']+)'/)[1];
            openCategory(defaultCategory);
        }
    })


    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("event-and-parties").style.display = "block"
    })


    //home to shopping
    document.addEventListener("DOMContentLoaded", function () {
        // Get the URL parameters
        const params = new URLSearchParams(window.location.search);
        const category = params.get("category");

        if (category) {
            // Hide all shoppingContainers
            document
                .querySelectorAll(".shoppingContainer")
                .forEach((container) => {
                    container.style.display = "none";
                });

            // Show the selected category container
            const selectedContainer = document.getElementById(category);
            if (selectedContainer) {
                selectedContainer.style.display = "block";
            }
        }
    })

    function getCategoryId(categoryValue) {
        let category = categoryValue
        let categoryId = 1;

        switch (category) {
            case "events-and-parties":
                categoryId = 1;
                break;
            case "tech-and-gadgets":
                categoryId = 2;
                break;
            case "clothing-and-accessories":
                categoryId = 3;
                break;
            case "sports-and-outdoor-gear":
                categoryId = 4;
                break;
            case "tools-and-equipment":
                categoryId = 5;
                break;
            case "musical-instruments":
                categoryId = 6;
                break;
            case "home-and-office":
                categoryId = 7;
                break;
            case "pets-accessories":
                categoryId = 8;
                break;
            case "books-and-literature":
                categoryId = 9;
                break;
        }
        return categoryId;
    }
</script>
<script src="/js/get-category-id.js"></script>