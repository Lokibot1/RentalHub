<link rel="stylesheet" href="/css/listing.css" />
<link rel="web icon" type="png" href="/images/webicon.png">
<!--Navigation Bar-->
<nav>
    <a href="/">
        <div class="logo">
            <h1>Rental <span> Hub</span></h1>
        </div>
    </a>
    <ul>
        <li><a href="/">Home</a></li>
        <li>
            <% if (isAuthenticated && isBanned) { %>
              <span title="You are banned and cannot add listings">
                <img src="/images/WhiteAdd.png" class="add-icon" style="opacity: 0.5; cursor: not-allowed;" />
              </span>
            <% } else { %>
              <a href="/user/listing" title="<%= isAuthenticated ? 'Add a listing' : 'Log in to add a listing' %>">
                <img src="/images/WhiteAdd.png" class="add-icon" />
              </a>
            <% } %>
          </li>          
          <li>
            <% if (isAuthenticated && role === 'admin' ) { %>
                <a href="/admin/admin-dashboard">
                    <img src="/images/Icon1.png" alt="Profile" class="profile-icon"/>
                </a>
            <% } else if (isAuthenticated && role === 'user' ) { %>
                <a href="/user/profile">
                    <img src="/images/Icon1.png" alt="Profile" class="profile-icon"/>
                </a>
            <% } else { %>
                <a href="/login">
                    <img src="/images/Icon1.png" alt="Profile" class="profile-icon"/>
                </a>
            <% } %>
        </li>
    </ul>
</nav>

<!--Form to add a new listing-->
<h2>Update listing</h2>
<div class="container">
    <div class="form">
        <form method="post" id="listingForm">
            <input type="text" name="item_name" id="itemName" placeholder="Enter item name" oninput="updatePreview()"
                required />
            <input type="number" name="item_price" id="itemPrice" placeholder="Enter item price"
                oninput="updatePreview()" required />
                <input type="number" name="item_week_price" id="itemWeekPrice" placeholder="Enter item price per week"
                oninput="updatePreview()" required />
            <textarea name="item_description" id="itemDescription" placeholder="Enter item description"
                oninput="updatePreview()" required></textarea>

            <input type="number" name="item_quantity" id="itemQuantity" min="1" placeholder="Enter of Quantity of Item"
                oninput="updatePreview()" required />

            <input type="text" name="location" id="location" placeholder="Enter location" required />
            <input type="file" name="item_file" id="img" for="imageInput" accept="image/*" onchange="previewImage()"
                required />

            <select name="categories" id="categories" required></select>

            <button type="submit">Update Listing</button>
        </form>
    </div>  

    <!--Preview Section-->
    <div class="preview">
        <div class="pic">
            <img id="preview" src="" alt="">
        </div>
        <div class="product-details">
            <label>Name of product: <span id="product-name"></span></label>
            <hr>
            <label>Price per day: <span id="product-price"></span></label>
            <hr>
            <label>Price per week: <span id="product-week-price"></span></label>
            <hr>
            <label>Item Description: <span id="product-description"></span></label>
            <hr>
            <label>No. of Item Quantity: <span id="item-quantity"></span></label>
        </div>
    </div>
</div>

<!--Error Modal when updating cause of ongoung transactions-->
<div id="errorModal" class="error-modal">
    <div class="error-content">
        <p class="note0">Update Failed: Due to On Going Transaction(s) for this item</p>
        <p class="note">Finish all your transactions first for this item before updating this item</p>
        <button onclick="closeErrorModal()" class="close-button">I Understand</button>
    </div>
</div>

<div id="overlay" class="overlay"></div>
<div id="updateConfirmModal" class="update-confirm-modal">
    <div class="error-content">
        <p>Item Updated Successfully</p>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // let selectedItem = localStorage.getItem('selectedItem')
        // let item = JSON.parse(selectedItem)

         const item = JSON.parse('<%- JSON.stringify(item) %>');
         console.log("Loaded item:", item);

        // Set values upon load
        document.querySelector('[name="item_name"]').value = item.name
        document.querySelector('[name="item_price"]').value = item.price
        document.querySelector('[name="item_week_price"]').value = item.price_per_week
        document.querySelector('[name="item_description"]').value = item.description
        document.querySelector('[name="item_quantity"]').value = item.quantity
        document.querySelector('[name="location"]').value = item.location

        // Set preview values
        document.querySelector('img#preview').src = `/uploads/${item.file_path}`
        document.querySelector('span#product-name').textContent = item.name
        document.querySelector('span#product-price').textContent = item.price
        document.querySelector('span#product-week-price').textContent = item.price_per_week
        document.querySelector('span#product-description').textContent = item.description
        document.querySelector('span#item-quantity').textContent = item.quantity

        const categories = [
            { value: 1, text: "Events & Parties" },
            { value: 2, text: "Tech & Gadgets" },
            { value: 3, text: "Clothing & Accessories" },
            { value: 4, text: "Sports & Outdoor Gear" },
            { value: 5, text: "Tools & Equipment" },
            { value: 6, text: "Musical Instruments" },
            { value: 7, text: "Home & Office" },
            { value: 8, text: "Pets Accessories" },
            { value: 9, text: "Books and Literature" },
            { value: 10, text: "Staycations" },
            { value: 11, text: "Vehicles" },
        ];

        const select = document.getElementById("categories");
        const selectedValue = item.category_id; // Change this value to preselect a different option

        categories.forEach(category => {
            const option = document.createElement("option");
            option.value = category.value;
            option.textContent = category.text;

            if (category.value === selectedValue) {
                option.selected = true; // Set the default selected option
            }

            select.appendChild(option);
        });

        console.log('selectedItem', item)


        //Listing Functionality
        document
    .getElementById("listingForm")
    .addEventListener("submit", async function (e) {
        e.preventDefault();

        // Get the current URL last segment to extract itemId
        let url = window.location.href;
        let itemId = url.substring(url.lastIndexOf("/") + 1);


        try {
            const response = await fetchWithAutoRefresh(`/api/shared/update-product/${itemId}`, {
                method: "PATCH",
            });

            const data = await response.json();

            if (data.success) {
                // Show success modal
                document.getElementById("updateConfirmModal").style.display = "flex";
                document.getElementById("overlay").style.display = "block";
                setTimeout(() => {
                    document.getElementById("updateConfirmModal").style.display = "none";
                    document.getElementById("overlay").style.display = "none";
                }, 3000);
                window.location.href = '/shop';
            } else {
                // If update failed due to an ongoing transaction
                if (data.message && data.message.includes("ongoing transaction")) {
                    document.getElementById("errorModal").style.display = "flex";
                    document.getElementById("overlay").style.display = "block";
                } else {
                    document.getElementById("errorModal").style.display = "flex";
                    document.getElementById("overlay").style.display = "block";
                }
            }
        } catch (error) {
            console.error("Update request error:", error);
            document.getElementById("errorModal").style.display = "flex";
        }
    });

// Function to close the error modal
window.closeErrorModal = function () {
            console.log("Close button is clicked");
            document.getElementById('errorModal').style.display = 'none';
            overlay.style.display = 'none';
        }

        // Preview Functionality
        function updatePreview() {
            document.getElementById("product-name").textContent = document.getElementById("itemName").value;
            document.getElementById("product-price").textContent = document.getElementById("itemPrice").value;
            document.getElementById("product-week-price").textContent = document.getElementById("itemWeekPrice").value;

            document.getElementById("itemDescription").addEventListener("input", function () {
                document.getElementById("product-description").innerHTML = this.value.replace(/\n/g, "<br>");
            });

            document.getElementById("itemQuantity").addEventListener("input", function () {
                document.getElementById("item-quantity").textContent = this.value;
            });
        }

        function previewImage() {
            let file = document.getElementById("img").files[0];
            let preview = document.getElementById("preview");

            if (file) {
                let reader = new FileReader();
                reader.onload = function (event) {
                    preview.src = event.target.result;
                };
                reader.readAsDataURL(file);
            } else {
                preview.src = "";
            }
        }

        // Attach event listeners to inputs for live preview
        document.getElementById("itemName").addEventListener("input", updatePreview);
        document.getElementById("itemPrice").addEventListener("input", updatePreview);
        document.getElementById("itemWeekPrice").addEventListener("input", updatePreview);
        document.getElementById("itemDescription").addEventListener("input", updatePreview);
        document.getElementById("img").addEventListener("change", previewImage);
        document.getElementById("itemQuantity").addEventListener("change", updatePreview);
    });

    // Get category name
    function getCategoryName(categoryValue) {
        let category = categoryValue
        let categoryName = "";

        switch (category) {
            case "1":
                categoryName = "events-and-parties";
                break;
            case "2":
                categoryName = "tech-and-gadgets";
                break;
            case "3":
                categoryName = "clothing-and-accessories";
                break;
            case "4":
                categoryName = "sports-and-outdoor-gear";
                break;
            case "5":
                categoryName = "tools-and-equipment";
                break;
            case "6":
                categoryName = "musical-instruments";
                break;
            case "7":
                categoryName = "home-and-office";
                break;
            case "8":
                categoryName = "pets-accessories";
                break;
            case "9":
                categoryName = "books-and-literature";
                break;
            case "10":
                categoryName = "staycations";
                break;
            case "11":
                categoryName = "vehicles";
                break;
        }
        return categoryName;
    }

</script>