<link rel="stylesheet" href="/css/listing.css" />
<link rel="web icon" type="png" href="/images/webicon.png">
<!--Navigation Bar-->
<nav>
    <a href="/">
        <div class="logo">
            <h1>Rental <span> Hub</span></h1>
        </div>
    </a>
    <ul>
        <li><a href="/">Home</a></li>
        <li>
            <a href="/listing"><img src="/images/WhiteAdd.png" class="add-icon" /></a>
        </li>
        <li>
            <a href="/login">
                <img src="/images/Icon1.png" alt="Profile" class="profile-icon" />
            </a>
        </li>
    </ul>
</nav>

<!--Form to add a new listing-->
<h2>Update listing</h2>
<div class="container">
    <div class="form">
        <form method="post" id="listingForm">
            <input type="text" name="item_name" id="itemName" placeholder="Enter item name" oninput="updatePreview()"
                required />
            <input type="number" name="item_price" id="itemPrice" placeholder="Enter item price"
                oninput="updatePreview()" required />
            <textarea name="item_description" id="itemDescription" placeholder="Enter item description"
                oninput="updatePreview()" required></textarea>

            <input type="number" name="item_quantity" id="itemQuantity" min="1" placeholder="Enter of Quantity of Item"
                oninput="updatePreview()" required />

            <input type="text" name="location" id="location" placeholder="Enter location" required />
            <input type="file" name="item_file" id="img" for="imageInput" accept="image/*" onchange="previewImage()"
                required />

            <select name="categories" id="categories" required></select>

            <button type="submit">Update Listing</button>
        </form>
    </div>

    <!--Preview Section-->
    <div class="preview">
        <div class="pic">
            <img id="preview" src="" alt="">
        </div>
        <div class="product-details">
            <label>Name of product: <span id="product-name"></span></label>
            <hr>
            <label>Price per day: <span id="product-price"></span></label>
            <hr>
            <label>Item Description: <span id="product-description"></span></label>
            <hr>
            <label>No. of Item Quantity: <span id="item-quantity"></span></label>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let selectedItem = localStorage.getItem('selectedItem')
        let item = JSON.parse(selectedItem)

        // Set values upon load
        document.querySelector('[name="item_name"]').value = item.name
        document.querySelector('[name="item_price"]').value = item.price
        document.querySelector('[name="item_description"]').value = item.description
        document.querySelector('[name="item_quantity"]').value = item.quantity
        document.querySelector('[name="location"]').value = item.location

        // Set preview values
        document.querySelector('img#preview').src = `/uploads/${item.image}`
        document.querySelector('span#product-name').textContent = item.name
        document.querySelector('span#product-price').textContent = item.price
        document.querySelector('span#product-description').textContent = item.description
        document.querySelector('span#item-quantity').textContent = item.quantity

        const categories = [
            { value: 1, text: "Events & Parties" },
            { value: 2, text: "Tech & Gadgets" },
            { value: 3, text: "Clothing & Accessories" },
            { value: 4, text: "Sports & Outdoor Gear" },
            { value: 5, text: "Tools & Equipment" },
            { value: 6, text: "Musical Instruments" },
            { value: 7, text: "Home & Office" },
            { value: 8, text: "Pets Accessories" }
        ];

        const select = document.getElementById("categories");
        const selectedValue = item.category_id; // Change this value to preselect a different option

        categories.forEach(category => {
            const option = document.createElement("option");
            option.value = category.value;
            option.textContent = category.text;

            if (category.value === selectedValue) {
                option.selected = true; // Set the default selected option
            }

            select.appendChild(option);
        });

        console.log('selectedItem', item)


        //Listing Functionality
        document
            .getElementById("listingForm")
            .addEventListener("submit", async function (e) {
                e.preventDefault();

                // Get the current URL last segment
                let url = window.location.href;
                let itemId = url.substring(url.lastIndexOf("/") + 1);

                const formData = new FormData(this);

                console.log('submitting form', this);

                await fetch(`/api/shared/update-product/${itemId}`, {
                    method: "PATCH",
                    body: formData,
                })
                    .then((response) => response.json())
                    .then((data) => {
                        alert("Item updated!");
                        window.location.href = '/shop';
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                    });
            });

        // Preview Functionality
        function updatePreview() {
            document.getElementById("product-name").textContent = document.getElementById("itemName").value;
            document.getElementById("product-price").textContent = document.getElementById("itemPrice").value;

            document.getElementById("itemDescription").addEventListener("input", function () {
                document.getElementById("product-description").innerHTML = this.value.replace(/\n/g, "<br>");
            });

            document.getElementById("itemQuantity").addEventListener("input", function () {
                document.getElementById("item-quantity").textContent = this.value;
            });
        }

        function previewImage() {
            let file = document.getElementById("img").files[0];
            let preview = document.getElementById("preview");

            if (file) {
                let reader = new FileReader();
                reader.onload = function (event) {
                    preview.src = event.target.result;
                };
                reader.readAsDataURL(file);
            } else {
                preview.src = "";
            }
        }

        // Attach event listeners to inputs for live preview
        document.getElementById("itemName").addEventListener("input", updatePreview);
        document.getElementById("itemPrice").addEventListener("input", updatePreview);
        document.getElementById("itemDescription").addEventListener("input", updatePreview);
        document.getElementById("img").addEventListener("change", previewImage);
        document.getElementById("itemQuantity").addEventListener("change", updatePreview);
    });

    // Get category name
    function getCategoryName(categoryValue) {
        let category = categoryValue
        let categoryName = "";

        switch (category) {
            case "1":
                categoryName = "events-and-parties";
                break;
            case "2":
                categoryName = "tech-and-gadgets";
                break;
            case "3":
                categoryName = "clothing-and-accessories";
                break;
            case "4":
                categoryName = "sports-and-outdoor-gear";
                break;
            case "5":
                categoryName = "tools-and-equipment";
                break;
            case "6":
                categoryName = "musical-instruments";
                break;
            case "7":
                categoryName = "home-and-office";
                break;
            case "8":
                categoryName = "pets-accessories";
                break;
        }
        return categoryName;
    }

</script>