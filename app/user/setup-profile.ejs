<link rel="stylesheet" href="/css/setup-profile.css">
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
<link rel="web icon" type="png" href="/images/webicon.png">
<nav class="navbar">
    <a href="/" class="logo">
        <span class="rental">Rental</span><span class="hub">Hub</span>
    </a>
</nav>

<div class="page-wrapper">
    <h3>Set Up Your Profile</h3>
    <div class="container">
        <form id="setup-profile-form" enctype="multipart/form-data">
            <div class="profile-upload">
                <img id="profileImage" src="/images/default.png" alt="Profile Picture">
                <p>Upload a profile picture to help the community recognize who they're transacting with.</p>
                <input type="file" name="profile_image" id="fileInput" accept="image/*" hidden>
                <button id="uploadButton" class="uploadButton">Upload Photos</button>
            </div>

            <h2 class="Additional-Info">Additional Information</h2>
            <div class="name-inputs">
                <input name="middle_name" type="text" class="MI-input" placeholder="Middle Name">
                <input name="suffix" type="text" class="suffix-input" placeholder="Suffix">
            </div>

            <div class="contact-info">
                <label>Contact Information:</label>
                <!-- <input type="text" class="full-input" placeholder="+63"> -->
                <input name="social_media" type="text" class="full-input" placeholder="Social Media links">
            </div>

            <div class="address-info">
                <label>Address:</label>
                <div class="address-row">
                    <select name="region" id="regionDropdown" class="half-input">
                        <option value="">Select Region</option>
                    </select>
                    <select name="city" id="cityDropdown" class="half-input" disabled>
                        <option value="">Select City</option>
                    </select>
                </div>
                <div class="address-row">
                    <div class="barangay-container half-width">
                        <input name="barangay" type="text" class="barangay-input" id="barangayInput"
                            placeholder="Search Barangay" disabled>
                        <ul id="barangaySuggestions" class="suggestions-list"></ul>
                    </div>
                    <div class="postal-container half-width">
                        <input name="postal_code" type="text" class="postalCode" placeholder="Postal Code">
                    </div>
                </div>
                <input name="address" type="text" class="full-input" placeholder="House no. Street Name">
            </div>

            <button type="submit" class="submit-btn">SUBMIT</button>
            <a href="/user/profile">Continue without updating</a>
        </form>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const regionDropdown = document.getElementById("regionDropdown");
        const cityDropdown = document.getElementById("cityDropdown");
        const barangayInput = document.getElementById("barangayInput");
        const barangaySuggestions = document.getElementById("barangaySuggestions");
        const addressForm = document.querySelector("form"); // Adjust selector as needed

        let barangayList = [];

        const fetchData = async (url) => {
            try {
                const response = await fetch(url);
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                return await response.json();
            } catch (error) {
                console.error(`Error fetching data from ${url}:`, error);
                return [];
            }
        };

        const fetchRegions = async () => {
            const regions = await fetchData("https://psgc.cloud/api/regions");
            regionDropdown.innerHTML = `<option value="">Select Region</option>`;
            regions.forEach(region => {
                const option = document.createElement("option");
                option.value = region.code;
                option.textContent = region.name;
                regionDropdown.appendChild(option);
            });
        };

        const fetchCities = async (regionCode) => {
            cityDropdown.innerHTML = `<option value="">Select City</option>`;
            cityDropdown.disabled = true;
            barangayInput.disabled = true;
            barangayInput.value = "";
            barangayList = [];
            barangaySuggestions.style.display = "none";

            if (!regionCode) return;

            const cities = await fetchData(`https://psgc.cloud/api/regions/${regionCode}/cities`);
            cities.forEach(city => {
                const option = document.createElement("option");
                option.value = city.code;
                option.textContent = city.name;
                cityDropdown.appendChild(option);
            });
            cityDropdown.disabled = false;
        };

        const fetchBarangays = async (cityCode) => {
            barangayInput.value = "";
            barangayList = [];
            barangayInput.disabled = true;
            barangaySuggestions.style.display = "none";

            if (!cityCode) return;

            barangayList = await fetchData(`https://psgc.cloud/api/cities/${cityCode}/barangays`);
            barangayInput.disabled = false;
        };

        const showBarangaySuggestions = (query) => {
            if (!query) {
                barangaySuggestions.innerHTML = "";
                barangaySuggestions.style.display = "none";
                return;
            }

            const filteredBarangays = barangayList.filter(b => b.name.toLowerCase().includes(query.toLowerCase()));
            barangaySuggestions.innerHTML = "";

            if (filteredBarangays.length === 0) {
                barangaySuggestions.style.display = "none";
                return;
            }

            barangaySuggestions.style.display = "block";
            filteredBarangays.slice(0, 10).forEach(b => {
                const li = document.createElement("li");
                li.textContent = b.name;
                li.addEventListener("click", () => {
                    barangayInput.value = b.name;
                    barangayInput.dataset.code = b.code;
                    barangaySuggestions.style.display = "none";
                });
                barangaySuggestions.appendChild(li);
            });
        };

        regionDropdown.addEventListener("change", (event) => fetchCities(event.target.value));
        cityDropdown.addEventListener("change", (event) => fetchBarangays(event.target.value));
        barangayInput.addEventListener("input", (event) => showBarangaySuggestions(event.target.value));

        document.addEventListener("click", (event) => {
            if (!barangayInput.contains(event.target) && !barangaySuggestions.contains(event.target)) {
                barangaySuggestions.style.display = "none";
            }
        });

        if (addressForm) {
            addressForm.addEventListener("submit", (event) => {
                if (barangayInput.value && !barangayInput.dataset.code) {
                    event.preventDefault();
                    alert("Please select a barangay from the suggestions");
                }
            });
        }

        await fetchRegions();
    });

    const fileInput = document.getElementById("fileInput");
    const profileImage = document.getElementById("profileImage");
    const uploadButton = document.getElementById("uploadButton");

    uploadButton.addEventListener("click", () => fileInput.click());

    fileInput.addEventListener("change", function (event) {
        const file = event.target.files[0];

        if (file) {
            const fileType = file.type;
            const validTypes = ["image/jpeg", "image/png"];

            if (!validTypes.includes(fileType)) {
                alert("Invalid file type! Please upload a JPG or PNG image.");
                fileInput.value = ""; // Reset file input
                return;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                profileImage.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    });

    const form = document.querySelector('.container');
    const middleName = document.querySelector('.MI-input');
    const suffix = document.querySelector('.suffix-input');
    const socialMedia = document.querySelector('.full-input[placeholder="Social Media links"]');

    const region = document.getElementById('regionDropdown');
    const city = document.getElementById('cityDropdown');
    // Get the text of the selected option in the region dropdown
    const selectedRegion = region.options[region.selectedIndex].text;

    // Get the text of the selected option in the city dropdown
    const selectedCity = city.options[city.selectedIndex].text;

    const barangay = document.getElementById('barangayInput');
    const postalCode = document.querySelector('.postalCode');
    const address = document.querySelector('.full-input[placeholder="House no. Street Name"]');

    const modalHTML = `
        <div id="confirmModal" class="modal">
            <div class="modal-content">
                <h2>Confirm Submission</h2>
                <p>Are you sure this is the final look?</p>
                <div class="modal-buttons">
                    <button id="confirmYes" class="modal-btn yes-btn">Yes</button>
                    <button id="confirmNo" class="modal-btn no-btn">No</button>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);

    const modal = document.getElementById('confirmModal');
    const confirmYes = document.getElementById('confirmYes');
    const confirmNo = document.getElementById('confirmNo');

    function validateForm() {
        let isValid = true;
        let errorMessages = [];

        if (profileImage.src.includes('default.png')) {
            errorMessages.push("Please upload a profile picture");
            isValid = false;
        }

        /*
        if (!phone.value.trim()) {
            errorMessages.push("Phone number is required");
            isValid = false;
        }
        */

        if (!region) {
            errorMessages.push("Region is required");
            isValid = false;
        }

        if (!city) {
            errorMessages.push("City is required");
            isValid = false;
        }

        if (!barangay.value.trim()) {
            errorMessages.push("Barangay is required");
            isValid = false;
        }

        if (!address.value.trim()) {
            errorMessages.push("Street address is required");
            isValid = false;
        }

        if (postalCode.value.trim() && !/^\d{4}$/.test(postalCode.value.trim())) {
            errorMessages.push("Postal code should be 4 digits");
            isValid = false;
        }

        if (!isValid) {
            alert(errorMessages.join("\n"));
        }

        return isValid;
    }

    document.querySelector('#setup-profile-form').addEventListener('submit', async function (e) {
        e.preventDefault();

        if (validateForm()) {
            modal.style.display = "flex";
        }
    });


    confirmYes.addEventListener("click", async function () {
        modal.style.display = "none";
        const setupProfileForm = document.querySelector("#setup-profile-form");
        const formData = new FormData(setupProfileForm);
    
        // Convert select elements' values to text content (if needed)
        setupProfileForm.querySelectorAll("select").forEach(select => {
            const selectedOption = select.options[select.selectedIndex];
            formData.set(select.name, selectedOption.textContent);
        });
    
        // ✅ Send formData directly (multipart/form-data)
        try {
            await fetch("http://localhost:8000/api/user/profile/setup", {
                method: "PATCH",
                body: formData, // No need for headers; browser sets it automatically
            });
    
            window.location.href = "/user/profile"; // Redirect to user profile
        } catch (error) {
            alert(error.message);
        }
    });
    
    confirmNo.addEventListener('click', function () {
        modal.style.display = "none";
    });

    window.addEventListener('click', function (e) {
        if (e.target === modal) {
            modal.style.display = "none";
        }
    });
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>