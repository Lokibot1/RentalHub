<link rel="stylesheet" href="/css/admin.css"/>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
<link rel="web icon" type="png" href="images/webicon.png">
<!--Navigation Bar-->
<%- include('../partials/admin/navigation-bar.ejs'); %>

<!--Body-->
<div class="main">
    <!-- Side Bar -->
    <%- include('../partials/admin/sidebar-links.ejs'); %>

    <!-- Logout Confirmation Modal -->
    <div id="logout-modal" class="logout-modal">
        <div class="logout-content">
            <p>Are you sure you want to log out?</p>
            <div class="logout-button-group">
                <button id="confirm-logout" class="yes-btn">Yes</button>
                <button id="cancel-logout" class="no-btn">No</button>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="content">
        <div class="header">
            <h1>User Management</h1>
            <div class="search-bar">
                <input type="text" placeholder="Looking for...">
                <button><img src="/images/search.png"/></button>
            </div>
        </div>

        <!--Tab Headings-->
        <div class="tab">
            <button class="tablinks active" onclick="openTab(event, 'UserList')">
                User List
            </button>
            <button class="tablinks" onclick="openTab(event, 'ReportedAccounts')">
                Reported Accounts
            </button>
            <button class="tablinks" onclick="openTab(event, 'BannedAccounts')">
                Banned Accounts
            </button>
        </div>

        <!--Tab Content-->

        <!--User List-->
        <div id="UserList" class="tab-content">
            <div class="user-table">
                <table>
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

        <!--Reported Accounts-->
        <div id="ReportedAccounts" class="tab-content" style="display: none;">
            <div class="user-table">
                <table>
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody class="report-accounts-container"></tbody>
                </table>
            </div>
        </div>

        <!--Banned Accounts-->
        <div id="BannedAccounts" class="tab-content" style="display: none;">
            <div class="user-table">
                <table>
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody id="banned-accounts-container">
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!--Confirmation Modal-->
    <div id="overlay" class="overlay"></div>
    <div id="banModal" class="modal">
        <div class="modal-content">
            <h3>Are you sure you want to <span>ban</span> this Account?</h3>
            <div class="modal-buttons">
                <button class="btn-yes" id="confirmBan">Confirm</button>
                <button class="btn-no" id="cancelBtn">Cancel</button>
            </div>
        </div>
    </div>
    <div id="banToast" class="toast">User Successfully Banned!</div>

    <div id="restoreModal" class="modal">
        <div class="modal-content">
            <h3>Are you sure you want to <span>restore</span> this Account?</h3>
            <div class="modal-buttons">
                <button class="btn-yes" id="confirmRestore">Confirm</button>
                <button class="btn-no" id="cancelRestore">Cancel</button>
            </div>
        </div>
    </div>
    <div id="restoreToast" class="toast">User Successfully Restored!</div>
</div>

<script src="/js/admin.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const searchInput = document.querySelector(".search-bar input");
        const searchButton = document.querySelector(".search-bar button");
        const userListTab = document.getElementById("UserList");
        const userTableBody = userListTab.querySelector("table tbody");

        // Create a container for the black box area (search results)
        let searchResultsBox = document.createElement("div");
        searchResultsBox.className = "search-results-box";

        // Get the header element to position the box
        const headerElement = document.querySelector(".header");

        // Insert the search results box after the header
        headerElement.parentNode.insertBefore(searchResultsBox, headerElement.nextSibling);

        // Create the search message element inside the box
        let searchMessage = document.createElement("div");
        searchMessage.className = "search-results-message";
        searchResultsBox.appendChild(searchMessage);

        async function fetchUsers(searchQuery = "") {
            try {
                searchMessage.innerHTML = searchQuery ? `<p>Searching for results...</p>` : "";
                userTableBody.innerHTML = "<tr><td colspan='2'>Searching for users...</td></tr>";

                const endpoint = searchQuery
                    ? `/api/admin/manage-users/search?search=${encodeURIComponent(searchQuery)}`
                    : "/api/admin/manage-users";

                const response = await fetch(endpoint);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                userTableBody.innerHTML = "";

                if (data.success && data.data.length > 0) {
                    displayUsers(data.data);
                    console.log(data.data);

                    // Update search results box visibility
                    searchResultsBox.style.display = searchQuery ? "flex" : "none";

                    searchMessage.innerHTML = searchQuery
                        ? `<p>Showing ${data.data.length} result${data.data.length !== 1 ? 's' : ''} for "<strong>${searchQuery}</strong>"</p>`
                        : "";

                    // Clear Search Button
                    if (searchQuery) {
                        let clearButton = document.createElement("button");
                        clearButton.className = "clear-search";
                        clearButton.innerText = "Clear Search";
                        clearButton.addEventListener("click", function () {
                            searchInput.value = "";
                            fetchUsers("");
                        });

                        searchMessage.appendChild(clearButton);
                    }
                } else {
                    userTableBody.innerHTML = `<tr><td colspan='2'>No users found.</td></tr>`;

                    // Update search results box visibility
                    searchResultsBox.style.display = searchQuery ? "flex" : "none";
                    searchMessage.innerHTML = searchQuery ? `<p>No results found for "<strong>${searchQuery}</strong>"</p>` : "";
                }
            } catch (error) {
                console.error("Error fetching users:", error);
                userTableBody.innerHTML = "<tr><td colspan='2'>Error loading users.</td></tr>";
            }
        }

        function displayUsers(users) {
            userTableBody.innerHTML = "";

            users.forEach(user => {
                const row = document.createElement("tr");
                row.innerHTML = `
                <td>${user.fullname}</td>
                <td>
                    <a href="#" onclick="viewUserDetail(${user.id})">
                        <i class="fa-solid fa-eye"></i>
                    </a>
                </td>
            `;
                userTableBody.appendChild(row);
            });
        }

        let debounceTimer;
        searchInput.addEventListener("input", function () {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                fetchUsers(this.value.trim());
            }, 300);
        });

        searchInput.addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                fetchUsers(this.value.trim());
            }
        });

        searchButton.addEventListener("click", function () {
            fetchUsers(searchInput.value.trim());
        });

        // Initialize users list
        fetchUsers();

        // TODO: @Loki, move this to a separate css rule
        // Add CSS for the search results box and message
        const style = document.createElement('style');
        style.textContent = `
        .search-results-box {
            display: none;
            align-items: center;
            justify-content: flex-end;
            padding: 10px 20px;
            margin-top: 10px;
            margin-bottom: 10px;
            background-color: none;
            border-radius: 4px;
        }
        
        .search-results-message {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .search-results-message p {
            margin: 0;
            font-size: 14px;
        }
        
        .clear-search {
            background-color: none;
            color: #800020;
            border: none;
            border-radius: 5px;
            padding: 8px 10px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.2s;
        }
        
        .clear-search:hover {
            background-color: #800020;
            color: #fff;
            transition: background-color 0.2s;
        }
        
        /* Media query for desktop view - position on the right side */
        @media (min-width: 768px) {
            .search-results-box {
                position: absolute;
                top: 170px; /* Adjust this value to align with your tabs */
                right: 20px;
                width: 350px;
                z-index: 1;
            }
        }
    `;
        document.head.appendChild(style);

        // Reported Accounts
        const reportedAccountsContainer = document.querySelector(".report-accounts-container");
        const reportedAccounts = document.querySelector(".report-accounts-fullname");

        const response = await fetch("/api/admin/manage-users/reports/all");
        const { data } = await response.json();

        console.log('data', data)

        if (data.length > 0) {
            reportedAccountsContainer.innerHTML = "";
            data.forEach(account => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td class="report-accounts-fullname">${account.fullname}</td>
                    <td>
                        <a href="#" onclick="viewUserReports(${account.reporter_id})">
                            <i class="fa-solid fa-eye"></i>
                        </a>
                        <a href="#" id="ban" onclick="banUser(${account.reported_user_id})">
                            <i class="fa-solid fa-ban"></i>
                        </a>
                    </td>
                `;
                reportedAccountsContainer.appendChild(row);
            });
        } else {
            reportedAccountsContainer.innerHTML = "<tr><td colspan='2'>No reported accounts found.</td></tr>";
        }

        // Banned Accounts
        const bannedAccountsContainer = document.getElementById("banned-accounts-container");
        const bannedResponse = await fetch("/api/admin/manage-users/banned-users/all");
        const { data: bannedData } = await bannedResponse.json();

        console.log('bannedData', bannedData)

        // TODO: viewUserInfo and restoreUser
        if (bannedData.length > 0) {
            bannedAccountsContainer.innerHTML = "";
            bannedData.forEach(account => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td class="banned-accounts-fullname">${account.fullname}</td>
                    <td>
                        <a href="#" onclick="viewUserInfo(${account.user_id})">
                            <i class="fa-solid fa-eye"></i>
                        </a>
                        <a href="#" id="restore" onclick="restoreUser(${account.user_id})">
                             <i class="fa-solid fa-repeat"></i>
                         </a>
                    </td>
                `;
                bannedAccountsContainer.appendChild(row);
            });
        } else {
            bannedAccountsContainer.innerHTML = "<tr><td colspan='2'>No banned accounts found.</td></tr>";
        }
    });

    const viewUserReports = async (accountId) => {
        const response = await fetch(`/api/admin/manage-users/reports/${accountId}`);
        const { data } = await response.json();

        console.log('Total Reports:', data.total_reports);
        console.log('User Reports:', data.reports);
    }

    // View user details
    const viewUserDetail = async (userId) => {
        console.log('Users:', userId);

        const response = await fetch(`http://localhost:8000/api/admin/manage-users/${userId}`);
        const {data: user, success} = await response.json();

        if (success) {

            document.getElementById('UserList').style.display = 'none';

            let userInfoDetails = document.getElementById('userInfoDetails');
            if (!userInfoDetails) {
                userInfoDetails = document.createElement('div');
                userInfoDetails.id = 'userInfoDetails';
                document.querySelector('.tab-content').parentNode.appendChild(userInfoDetails);
            }

            // Populate the user details
            userInfoDetails.innerHTML = `
                    <div class="user-detail-container" style="  overflow: auto;
                                                        height: 58vh;
                                                        background-color: #ffff;
                                                        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
                                                        padding: 20px;
                                                        padding-top: 0;
                                                        min-height: 300px;
                                                        border-radius: 0px 10px 10px 10px;">
                        <div class="back-button">
                            <a href="#" onclick="returnToUserList()">
                                <i class="fa-solid fa-arrow-left"></i>
                            </a>

                        </div>

                        <div class="user-detail-table">
                            <table style=" width: 100%;
                                    border-collapse: separate;
                                    border-spacing: 0px 20px;
                                    text-align: left;
                                    font-size: 18px;
                                    font-weight: 900;">
                                <tr>
                                    <td>User ID</td>
                                    <td>${user.id}</td>
                                </tr>
                                <tr>
                                    <td>Name</td>
                                    <td>${user.fullname}</td>
                                </tr>
                                <tr>
                                    <td>Email</td>
                                    <td>${user.email}</td>
                                </tr>
                                <tr>
                                    <td>Contact Number</td>
                                    <td>${user.contact_number}</td>
                                </tr>
                                <tr>
                                    <td>Account Status</td>
                                    <td>${user.account_status}</td>
                                </tr>
                                <tr>
                                    <td>Total Listings</td>
                                    <td>${user.total_listing}</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                `;

            // Display the user details
            userInfoDetails.style.display = 'block';
        } else {
            // Handle error
            alert('Error: Could not retrieve user details.');
        }
    }

    const banUser = async (userId) => {
        console.log('Ban User:', userId);
        const response = await fetch(`/api/admin/manage-users/ban/${userId}`, { method: 'PATCH' });
        const { message } = await response.json();

        console.log('Message:', message);
        // TODO: @loki, show a confirmation message
        // window.location.reload();
    }
</script>
