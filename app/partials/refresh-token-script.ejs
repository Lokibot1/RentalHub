<script>
    async function fetchWithAutoRefresh(url, options = {}) {
        let res = await fetch(url, options);

        // If token expired (401), try refresh
        if (res.status === 401) {
            const refreshed = await refreshAccessToken();

            if (refreshed) {
                // Retry original request with updated token
                res = await fetch(url, options);
            } else {
                // Redirect to login if refresh failed
                window.location.href = "/login";
                return;
            }
        }

        return res;
    }

    async function refreshAccessToken() {
        try {
            const res = await fetch("/refresh", {
                method: "POST",
                credentials: "include" // VERY IMPORTANT for sending cookies
            });

            if (res.status === 403) {
                console.error("Refresh token expired");
                window.location.href = "/login";
                return false;
            } else {
                return res.ok;
            }
        } catch (err) {
            console.error("Refresh failed", err);
            return false;
        }
    }

    // Optional: Set an interval to refresh token every 1 hour
    setInterval(() => {
        console.log('Auto-refresh at:', new Date());
        refreshAccessToken();
    }, 60 * 60 * 1000); // Every 1 hour

    // INACTIVITY LOGOUT SCRIPT (15 min)
    let inactivityTimeout;

    function resetInactivityTimer() {
        clearTimeout(inactivityTimeout);
        inactivityTimeout = setTimeout(() => {
            console.log("Logged out due to inactivity");
            window.location.href = "/logout";
        }, 15 * 60 * 1000); // 15 minutes
    }

    ["mousemove", "keydown", "click", "scroll"].forEach(event => {
        window.addEventListener(event, resetInactivityTimer);
    });

    resetInactivityTimer();
</script>
