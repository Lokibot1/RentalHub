<link rel="stylesheet" href="/css/archives.css" />

<!--Navigation Bar-->
<%- include('../partials/user/header-navbar.ejs'); %>

  <div class="main">
    <!--Sidebar-->
    <%- include('../partials/user/sidebar.ejs'); %>

      <!--Main Content-->

      <!-- Logout Confirmation Modal -->
      <div id="logout-modal" class="logout-modal">
        <div class="logout-content">
          <p>Are you sure you want to log out?</p>
          <div class="logout-button-group">
            <button id="confirm-logout" class="yes-btn">Yes</button>
            <button id="cancel-logout" class="no-btn">No</button>
          </div>
        </div>
      </div>

      <div class="content">
        <div class="tab">
          <button class="tablinks active" onclick="openTab(event, 'PendingPosts')">
            Pending Posts
          </button>
          <button class="tablinks" onclick="openTab(event, 'Items')">
            Items
          </button>
          <button class="tablinks" onclick="openTab(event, 'RentalRequests')">
            Rental Requests
          </button>
          <button class="tablinks" onclick="openTab(event, 'OnTransactions')">
            On Transactions
          </button>
          <button class="tablinks" onclick="openTab(event, 'Reviews')">
            Rating
          </button>

          <!-- <pre><%= JSON.stringify(pendingPosts, null, 2) %></pre> -->

          <!--Tab Content-->
          <!--Pending Post-->
          <div id="PendingPosts" class="tab-content">
            <div class="shoppingList">

              <% if (pendingPosts.length> 0) { %>
                <% pendingPosts.forEach(function(item) { %>
                  <a href="/user/view-pending">
                    <div class="shoppingItem">
                      <img src="/uploads/<%= item.product_image %>" alt="" class="itemImage" />
                      <hr />
                      <strong class="itemName">
                        <%= item.product_name %>
                      </strong>
                      <br />
                      <div class="item-price-quantity">
                        <strong class="itemPrice">$<%= item.product_price %></strong>
                        <br />
                        <strong>
                          <p class="itemQuantity"><%= item.product_quantity %> left</p>
                        </strong>
                      </div>
                      <strong class="itemLocation">
                        <%= item.owner_location %>
                      </strong>
                    </div>
                  </a>
                <% }); %>
              <% } else { %>
                <p>No pending posts available.</p>
              <% } %>
            </div>
          </div>


          <!--Items Post-->
          <div id="Items" class="tab-content" style="display: none">
            <div class="shoppingList">

              <% if (approvedPosts.length > 0) { %>
                <% approvedPosts.forEach(function(item) { %>
                  <a href="/user/update-listing/<%= item.item_id %>">
                    <div class="shoppingItem">
                      <img src="/images/trashcan.png" alt="Delete" class="itemDelete"
                        onclick="showDeleteModal('<%= item.item_id %>')" />
                      <hr />
                      <img src="/uploads/<%= item.item_image %>" alt="" class="itemImage" />
                      <hr />
                      <strong class="itemName"><%= item.item_name %></strong>
                      <br />
                      <div class="item-price-quantity">
                        <strong class="itemPrice">$<%= item.item_price %></strong>
                        <br />
                        <strong>
                          <p class="itemQuantity"><%= item.item_quantity %> left</p>
                        </strong>
                      </div>
                      <strong class="itemLocation"><%= item.item_location %></strong>
                    </div>
                  </a>
                  <% }); %>
                <% } else { %>
                  <p>No pending posts available.</p>
                <% } %>
            </div>
          </div>

          <div id="deleteModal" class="modal" style="display: none;">
            <div class="modal-content">
              <p><strong>Are you sure you want to <span style="color: #990000;">remove</span> this item?</strong></p>
              <div class="modal-buttons">
                <button id="confirmDelete" class="btn-yes">Yes</button>
                <button id="cancelDelete" class="btn-no">No</button>
              </div>
            </div>
          </div>

          <div id="successModal" class="modal" style="display: none;">
            <div class="success-message1">
              <p><strong>Item archived successfully!</strong></p>
            </div>
          </div>

          <!--Request Items-->
          <div id="RentalRequests" class="tab-content" style="display: none">
            <div class="RentalList">
              <div class="rentalItem">
                <div class="rentalInfo">
                  <div class="renterDetails">
                    <strong class="renterName">Renter's Name</strong>
                    <strong>•</strong>
                    <strong class="renterLocation">Location</strong>
                  </div>
                  <div class="itemDetails">
                    <img src="" alt="" class="itemImage" />
                    <h2 class="itemName">Items Name</h2>
                  </div>
                  <div class="rentalDurationContainer">
                    <strong class="rentalDuration">February 3-4, 2025</strong>
                    <strong>•</strong>
                    <strong class="MOD">Delivery</strong>
                  </div>
                </div>

                <!-- Dark Background Overlay -->
                <div id="overlay" class="overlay"></div>
                <div class="rentalAction">
                  <button id="accept-btn">✓</button>
                  <button id="decline-btn">✗</button>
                </div>
                <div id="confirmation-modal1" class="confirmation-modal1">
                  <div class="confirmation-box1">
                    <h2 class="accept-text2">Are you sure you want to <span class="accept-text1">accept</span> this
                      request?</h2>
                    <p class="note1">*Note: Remember to ask for Valid ID upon transaction*</p>
                    <div class="button-container1">
                      <button id="yes-btn1" class="yes-btn1">Yes</button>
                      <button id="no-btn1" class="no-btn1">No</button>
                    </div>
                  </div>
                </div>
              </div>
              <div id="overlay" class="overlay"></div>
              <div id="success-container1" class="success-container1">
                <div id="success-message1" class="success-message1">
                  <p>Request accepted successfully!</p>
                </div>
              </div>

              <!-- Decline Confirmation Modal -->
              <div id="decline-confirmation-modal1" class="confirmation-modal1">
                <div class="confirmation-box1">
                  <h2>Are you sure you want to <span class="decline-text1">decline</span> this request?</h2>
                  <div class="button-container1">
                    <button id="decline-yes-btn1" class="yes-btn1">Yes</button>
                    <button id="decline-no-btn1" class="no-btn1">No</button>
                  </div>
                </div>
              </div>

              <div id="overlay" class="overlay"></div>
              <div id="decline-container1" class="decline-container1">
                <div id="decline-message1" class="decline-message1">
                  <p>Request declined successfully!</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!--On Transactions-->
        <div id="OnTransactions" class="tab-content" style="display: none">
          <div class="RentalList">
            <div class="rentalItem">
              <div class="rentalInfo">
                <div class="renterDetails">
                  <strong class="renterName">Renter's Name</strong>
                </div>
                <div class="itemDetails">
                  <img src="" alt="" class="itemImage" />
                  <h2 class="itemName">Items Name</h2>
                </div>
                <div class="rentalDurationContainer">
                  <strong class="rentalDuration">February 3-4, 2025</strong>
                  <strong>•</strong>
                  <strong class="MOD">Delivery</strong>
                </div>
              </div>
              <div class="completeAction">
                <button id="report-btn">File a Report</button>
                <!--FIX ME: width problem, no submit requirements, no darkbg overlay-->
                <button id="review-btn">Done</button>
              </div>
            </div>
          </div>
        </div>

        <!--Report Modal-->
        <div id="modal-overlay" class="overlay"></div>
        <div id="report-modal" class="modal">
          <div class="modal-content" style="text-align: left">
            <h2>Report Renter</h2>
            <form id="report-form">
              <label>Reason:</label>
              <div>
                <input type="checkbox" id="duplicate" name="reason" value="duplicate" />
                <label for="duplicate">Duplicate</label>
              </div>
              <div>
                <input type="checkbox" id="inappropriate" name="reason" value="inappropriate" />
                <label for="inappropriate">Inappropriate</label>
              </div>
              <div>
                <input type="checkbox" id="fraudulent" name="reason" value="fraudulent" />
                <label for="fraudulent">Fraudulent</label>
              </div>
              <br />
              <label for="description">Describe What Happened</label>
              <br />
              <textarea id="description" name="description" rows="4" cols="50"></textarea>
              <br />
              <button id="submit-rprt" type="submit">Submit</button>
              <button id="cancel-rprt" type="button">Cancel</button>
            </form>
          </div>
        </div>


        <!-- Toast Notification -->
        <div id="report-toast" class="toast">Report Submitted Successfully!</div>

        <!-- Modal for Review  -->
        <div id="review-modal" class="modal">
          <div class="modal-content" style="text-align: left">
            <h2>Review Renter</h2>
            <form id="review-form">
              <label for="rating">Rating:</label>
              <br />
              <div class="stars">
                <span class="star2" data-value="1">★</span>
                <span class="star2" data-value="2">★</span>
                <span class="star2" data-value="3">★</span>
                <span class="star2" data-value="4">★</span>
                <span class="star2" data-value="5">★</span>
              </div>
              <br />
              <label for="description">Describe Your Experience</label>
              <br />
              <textarea id="description" name="description" rows="4" cols="50"></textarea>
              <br />
              <button id="submit-rev" type="submit">Submit</button>
              <button id="cancel-rev" type="button">Cancel</button>
            </form>
          </div>
        </div>

        <!-- FIX ME: Report Confirmation Modal, NOT SHOWING  -->
        <div id="confirm-modal" class="modal">
          <div class="modal-content">
            <h3>Are you sure you want to submit this review?</h3>
            <div class="modal-buttons">
              <button class="btn-yes" id="confirm-submit">Confirm</button>
              <button class="btn-no" id="cancel-confirm">Cancel</button>
            </div>
          </div>
        </div>
        <!-- FIXME: Toast Notification-->
        <div class="modalOverlay" id="modalOverlay"></div>
        <div id="toast" class="toast">Report Submitted Successfully!</div>

        <!--Reviews-->
        <div id="Reviews" class="tab-content" style="display: none">
          <div class="rentalItem">
            <div class="rentalInfo">
              <div class="renterDetails">
                <strong>Renter's Name</strong>
              </div>
              <div class="itemDetails">
                <h2 class="" style="white-space: normal">HAHAHAHAAHAHAH</h2>
              </div>
            </div>
          </div>
        </div>
      </div>
  </div>
  </div>

  <!-- JavaScript -->
  <script>
    // OPEN TAB FUNCTION
    function openTab(evt, tabName) {
      var i, tabs, buttons;
      tabs = document.getElementsByClassName("tab-content");
      for (i = 0; i < tabs.length; i++) {
        tabs[i].style.display = "none";
      }
      buttons = document.getElementsByClassName("tablinks");
      for (i = 0; i < buttons.length; i++) {
        buttons[i].classList.remove("active");
      }
      document.getElementById(tabName).style.display = "block";
      evt.currentTarget.classList.add("active");
    }

    // FETCH USER LISTINGS AND SORT THEM INTO TABS
    async function fetchAndSortListings() {
      try {
        const response = await fetch("/api/user-listings"); // Fetch all user listings
        const listings = await response.json();

        // Containers for each tab
        const pendingContainer = document.getElementById("PendingPosts");
        const itemsContainer = document.getElementById("Items");
        const rentalRequestsContainer =
          document.getElementById("RentalRequests");
        const transactionsContainer =
          document.getElementById("OnTransactions");
        const ratingContainer = document.getElementById("Reviews");

        // Clear previous data
        pendingContainer.innerHTML = "";
        itemsContainer.innerHTML = "";
        rentalRequestsContainer.innerHTML = "";
        transactionsContainer.innerHTML = "";
        ratingContainer.innerHTML = "";

        if (listings.length === 0) {
          pendingContainer.innerHTML = "<p>No listings available.</p>";
          return;
        }

        listings.forEach((listing) => {
          const listingCard = document.createElement("div");
          listingCard.classList.add("listing-card");
          listingCard.innerHTML = `
          <p class="listing-title">${listing.title}</p>
          <div class="listing-item">
            <img src="${listing.image || "placeholder.png"
            }" alt="Listing Image" class="listing-image">
            <span class="listing-name">${listing.name}</span>
          </div>
          <button class="cancel-btn" onclick="cancelListing('${listing.id
            }')">Cancel</button>
        `;

          switch (listing.status) {
            case "pending":
              pendingContainer.appendChild(listingCard);
              break;
            case "approved":
              itemsContainer.appendChild(listingCard);
              break;
            case "rental_request":
              rentalRequestsContainer.appendChild(listingCard);
              break;
            case "on_transaction":
              transactionsContainer.appendChild(listingCard);
              break;
            case "completed":
              ratingContainer.appendChild(listingCard);
              break;
          }
        });
      } catch (error) {
        console.error("Error fetching listings:", error);
      }
    }

    // CANCEL A SINGLE LISTING FUNCTION
    async function cancelListing(listingId) {
      try {
        const response = await fetch(`/api/cancel-listing/${listingId}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
        });
        if (response.ok) {
          alert("Listing canceled successfully.");
          await fetchAndSortListings();
        }
      } catch (error) {
        console.error("Error canceling listing:", error);
      }
    }

    // CANCEL ALL LISTINGS FUNCTION
    async function cancelAllListings() {
      try {
        const activeTab = document.querySelector(".tablinks.active").id;
        let status = "";

        switch (activeTab) {
          case "PendingPosts":
            status = "pending";
            break;
          case "Items":
            status = "approved";
            break;
          case "RentalRequests":
            status = "rental_request";
            break;
          case "OnTransactions":
            status = "on_transaction";
            break;
          case "Reviews":
            status = "completed";
            break;
        }

        const response = await fetch(`/api/cancel-all/${status}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
        });

        if (response.ok) {
          alert("All listings in this category have been canceled.");
          await fetchAndSortListings();
        }
      } catch (error) {
        console.error("Error canceling all listings:", error);
      }
    }

    // ADD EVENT LISTENER TO "CANCEL ALL" BUTTONS
    document.querySelectorAll(".cancel-btn").forEach((btn) => {
      btn.addEventListener("click", cancelAllListings);
    });
    //

    //REPORT MODAL FIX ME: NO OVERLAY ON TOAST + NO CONDITIONS
    document.addEventListener("DOMContentLoaded", function () {
      const reportBtn = document.getElementById("report-btn");
      const reportModal = document.getElementById("report-modal");
      const modalOverlay = document.getElementById("modal-overlay");
      const submitRprt = document.getElementById("submit-rprt");
      const cancelRprt = document.getElementById("cancel-rprt");
      const toast = document.getElementById("report-toast");

      // Function to show modal
      function showModal() {
        reportModal.style.display = "block";
        modalOverlay.style.display = "block";
      }

      // Function to hide modal
      function hideModal() {
        reportModal.style.display = "none";
        modalOverlay.style.display = "none";
      }

      // Function to show toast notification
      function showToast() {
        toast.classList.add("show");
        setTimeout(() => {
          toast.classList.remove("show");
        }, 3000); // Hide toast after 3 seconds
      }

      // Event listener for report button
      if (reportBtn) {
        reportBtn.addEventListener("click", showModal);
      }

      // Event listener for cancel button
      cancelRprt.addEventListener("click", hideModal);

      // Event listener for submit button
      submitRprt.addEventListener("click", function (event) {
        event.preventDefault(); // Prevent form submission
        hideModal();
        showToast();
      });

      // Close modal when clicking outside
      modalOverlay.addEventListener("click", hideModal);
    });


    // RENTAL REQUEST accept
    const acceptBtn = document.getElementById('accept-btn');
    const declineBtn = document.getElementById('decline-btn');
    const confirmationModal = document.getElementById('confirmation-modal1');
    const declineConfirmationModal = document.getElementById('decline-confirmation-modal1');
    const overlay = document.getElementById('overlay');
    const yesBtn = document.getElementById('yes-btn1');
    const noBtn = document.getElementById('no-btn1');
    const declineYesBtn = document.getElementById('decline-yes-btn1');
    const declineNoBtn = document.getElementById('decline-no-btn1');
    const successContainer = document.getElementById('success-container1');
    const declineContainer = document.getElementById('decline-container1');

    // Accept functionality
    acceptBtn.addEventListener('click', function () {
      confirmationModal.style.display = 'block';
      overlay.style.display = 'block';
    });

    noBtn.addEventListener('click', function () {
      confirmationModal.style.display = 'none';
      overlay.style.display = 'none';
    });

    yesBtn.addEventListener('click', function () {
      confirmationModal.style.display = 'none';
      overlay.style.display = 'block';
      successContainer.style.display = 'block';

      setTimeout(function () {
        overlay.style.display = 'none';
        successContainer.style.display = 'none';
      }, 3000);
    });

    // Decline functionality
    declineBtn.addEventListener('click', function () {
      declineConfirmationModal.style.display = 'block';
      overlay.style.display = 'block';
    });

    declineNoBtn.addEventListener('click', function () {
      declineConfirmationModal.style.display = 'none';
      overlay.style.display = 'none';
    });

    declineYesBtn.addEventListener('click', function () {
      declineConfirmationModal.style.display = 'none';
      overlay.style.display = 'block';
      declineContainer.style.display = 'block';

      setTimeout(function () {
        overlay.style.display = 'none';
        declineContainer.style.display = 'none';
      }, 3000);
    });

    // Hide modal when clicking outside of it
    window.addEventListener('click', function (event) {
      if (event.target === overlay) {
        confirmationModal.style.display = 'none';
        declineConfirmationModal.style.display = 'none';
        overlay.style.display = 'block';
      }
    });



    // Review Modal Functionality FIX ME: WIDTH TOO WIDE, DARKBG OVERLAY NOT WORKING
    const reviewBtn = document.getElementById("review-btn");
    const reviewModal = document.getElementById("review-modal");
    const confirmModal = document.getElementById("confirm-modal");
    const submitRev = document.getElementById("submit-rev");
    const confirmSubmit = document.getElementById("confirm-submit");
    const cancelConfirm = document.getElementById("cancel-confirm");
    const cancelRev = document.getElementById("cancel-rev");
    const toast = document.getElementById("toast");

    // Show review modal
    reviewBtn.addEventListener("click", function () {
      reviewModal.style.display = "flex";
    });

    // Hide review modal
    cancelRev.addEventListener("click", function () {
      reviewModal.style.display = "none";
    });

    // Star Rating System
    const stars = document.querySelectorAll(".star2");
    let selectedRating = 0;

    stars.forEach((star) => {
      star.addEventListener("click", function () {
        selectedRating = parseInt(this.getAttribute("data-value")); // Store the selected rating
        updateStars(selectedRating);
      });

      star.addEventListener("mouseover", function () {
        updateStars(parseInt(this.getAttribute("data-value")));
      });

      star.addEventListener("mouseout", function () {
        updateStars(selectedRating);
      });
    });

    function updateStars(rating) {
      stars.forEach((star, index) => {
        star.classList.toggle("active", index < rating);
      });
    }

    // Handle Review Submission
    submitRev.addEventListener("click", function (event) {
      event.preventDefault();

      if (selectedRating === 0) {
        showToast("Please select a star rating before submitting.", "error");
        return;
      }

      confirmModal.style.display = "flex"; // Show confirmation modal
    });

    // Confirm submission
    confirmSubmit.addEventListener("click", function () {
      confirmModal.style.display = "none";
      reviewModal.style.display = "none"; // Hide review modal
      showToast("Review Submitted Successfully!");
      selectedRating = 0; // Reset rating
      updateStars(0);
    });

    // Cancel confirmation modal
    cancelConfirm.addEventListener("click", function () {
      confirmModal.style.display = "none";
    });

    // Hide modal when clicking outside
    window.addEventListener("click", function (event) {
      if (event.target === reviewModal) {
        reviewModal.style.display = "block";
      }
      if (event.target === confirmModal) {
        confirmModal.style.display = "none";
      }
    });

    // Toast Notification Function
    function showToast(message, type = "success") {
      toast.innerText = message;
      toast.classList.add("show");

      // Apply different styles based on type
      if (type === "error") {
        toast.classList.add("error");
      } else {
        toast.classList.remove("error");
      }

      setTimeout(function () {
        toast.classList.remove("show");
      }, 3000);
    }

    document.addEventListener('DOMContentLoaded', function () {
      const deleteButtons = document.querySelectorAll('.itemDelete');
      const deleteModal = document.getElementById('deleteModal');
      const successModal = document.getElementById('successModal');
      const overlay = document.getElementById('overlay');
      const confirmButton = document.getElementById('confirmDelete');
      const cancelButton = document.getElementById('cancelDelete');
      let currentItem = null;

      // Show delete confirmation modal
      deleteButtons.forEach(button => {
        button.addEventListener('click', function (e) {
          e.preventDefault();
          e.stopPropagation();

          currentItem = this.closest('.shoppingItem');

          if (!currentItem) {
            console.error("Error: Could not find the parent '.shoppingItem' element.");
            return;
          }

          deleteModal.style.display = 'block';
          overlay.style.display = 'block';
        });
      });

      // Confirm delete
      confirmButton.addEventListener('click', function () {
        if (currentItem) {
          currentItem.remove();
          console.log("Item deleted successfully.");
        } else {
          console.error("Error: No item selected for deletion.");
        }

        deleteModal.style.display = 'none';
        overlay.style.display = 'block';
        successModal.style.display = 'block';

        setTimeout(() => {
          overlay.style.display = 'none';
          successModal.style.display = 'none';
        }, 5000);
      });

      // Cancel delete
      cancelButton.addEventListener('click', function () {
        deleteModal.style.display = 'none';
        overlay.style.display = 'none';
      });

      // Hide modals when clicking outside
      window.addEventListener('click', function (event) {
        if (event.target === overlay) {
          deleteModal.style.display = 'none';
          overlay.style.display = 'none';
          successModal.style.display = 'none';
        }
      });
    });

    //logout
    document.addEventListener("DOMContentLoaded", function () {
      const logoutLink = document.getElementById("logout");
      const modal = document.getElementById("logout-modal");
      const confirmLogout = document.getElementById("confirm-logout");
      const cancelLogout = document.getElementById("cancel-logout");

      // Ensure modal starts hidden
      modal.style.display = "none";

      // Show modal when logout is clicked
      logoutLink.addEventListener("click", function (event) {
        event.preventDefault(); // Prevents default link behavior
        modal.style.display = "flex"; // Show modal only on click
      });

      // Redirect when "Yes" is clicked
      confirmLogout.addEventListener("click", function () {
        window.location.href = "/logout"; // Adjust logout URL
      });

      // Close modal when "No" is clicked
      cancelLogout.addEventListener("click", function () {
        modal.style.display = "none"; // Hide modal
      });
    });

  </script>