<link rel="stylesheet" href="/css/archives.css" />

<!--Navigation Bar-->
<nav>
    <a href="/">
      <div class="logo">
        <h1>Rental<span>Hub</span></h1>
      </div>
    </a>
    <ul>
      <li><a href="/shopping">Shop</a></li>
      <li>
        <a href="/listing"
          ><img src="/images/WhiteAdd.png" class="add-icon"
        /></a>
      </li>
      <li>
        <a href="/dashboard/profile">
          <img
            src="/images/Icon1.png"
            alt="Profile"
            class="profile-icon"
          />
        </a>
      </li>
    </ul>
  </nav>

  <div class="main">
    <!--Sidebar-->
    <%- include('../partials/sidebar.ejs'); %>

    <!--Main Content-->
    <div class="content">
      <div class="tab">
        <button class="tablinks active" onclick="openTab(event, 'PendingPosts')">
          Pending Posts
        </button>
        <button class="tablinks" onclick="openTab(event, 'Items')">
          Items
        </button>
        <button class="tablinks" onclick="openTab(event, 'RentalRequests')">
          Rental Requests
        </button>
        <button class="tablinks" onclick="openTab(event, 'OnTransactions')">
          On Transactions
        </button>
        <button class="tablinks" onclick="openTab(event, 'Reviews')">
          Rating
        </button>

        <!--Tab Content-->
        <div id="PendingPosts" class="tab-content">
          <button  class="cancel-btn">Cancel All</button>
        </div>
        <div id="Items" class="tab-content" style="display: none">
          <button  class="cancel-btn">Cancel All</button>
        </div>
        <div id="RentalRequests" class="tab-content" style="display: none"></div>
        <div id="OnTransactions" class="tab-content" style="display: none"></div>
        <div id="Reviews" class="tab-content" style="display: none"></div>
        </div>
      </div>
    </div>
  </div>


<!-- JavaScript --> 
<script> // DITO JULS AUTO FETCH, AUTO SORT SAKA CANCEL ALL AND CANCEL SINGLE, adjust mo nalang.
document.addEventListener("DOMContentLoaded", async function () {
  await fetchAndSortListings(); // Fetch and auto-sort listings when the page loads
});

// OPEN TAB FUNCTION
function openTab(evt, tabName) {
  var i, tabs, buttons;
  tabs = document.getElementsByClassName("tab-content");
  for (i = 0; i < tabs.length; i++) {
    tabs[i].style.display = "none";
  }
  buttons = document.getElementsByClassName("tablinks");
  for (i = 0; i < buttons.length; i++) {
    buttons[i].classList.remove("active");
  }
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.classList.add("active");
}

// FETCH USER LISTINGS AND SORT THEM INTO TABS
async function fetchAndSortListings() {
  try {
    const response = await fetch("/api/user-listings"); // Fetch all user listings
    const listings = await response.json();

    // Containers for each tab
    const pendingContainer = document.getElementById("PendingPosts");
    const itemsContainer = document.getElementById("Items");
    const rentalRequestsContainer = document.getElementById("RentalRequests");
    const transactionsContainer = document.getElementById("OnTransactions");
    const ratingContainer = document.getElementById("Reviews");

    // Clear previous data
    pendingContainer.innerHTML = "";
    itemsContainer.innerHTML = "";
    rentalRequestsContainer.innerHTML = "";
    transactionsContainer.innerHTML = "";
    ratingContainer.innerHTML = "";

    if (listings.length === 0) {
      pendingContainer.innerHTML = "<p>No listings available.</p>";
      return;
    }

    // SORT LISTINGS INTO CORRECT TABS
    listings.forEach((listing) => {
      const listingCard = document.createElement("div");
      listingCard.classList.add("listing-card");
      listingCard.innerHTML = `
        <p class="listing-title">${listing.title}</p>
        <div class="listing-item">
          <img src="${listing.image || 'placeholder.png'}" alt="Listing Image" class="listing-image">
          <span class="listing-name">${listing.name}</span>
        </div>
        <button class="cancel-btn" onclick="cancelListing('${listing.id}')">Cancel</button>
      `;

      switch (listing.status) {
        case "pending":
          pendingContainer.appendChild(listingCard);
          break;
        case "approved":
          itemsContainer.appendChild(listingCard);
          break;
        case "rental_request":
          rentalRequestsContainer.appendChild(listingCard);
          break;
        case "on_transaction":
          transactionsContainer.appendChild(listingCard);
          break;
        case "completed":
          ratingContainer.appendChild(listingCard);
          break;
      }
    });
  } catch (error) {
    console.error("Error fetching listings:", error);
  }
}

// CANCEL A SINGLE LISTING FUNCTION
async function cancelListing(listingId) {
  try {
    const response = await fetch(`/api/cancel-listing/${listingId}`, {
      method: "DELETE",
      headers: { "Content-Type": "application/json" },
    });
    if (response.ok) {
      alert("Listing canceled successfully.");
      await fetchAndSortListings();
    }
  } catch (error) {
    console.error("Error canceling listing:", error);
  }
}

// CANCEL ALL LISTINGS FUNCTION
async function cancelAllListings() {
  try {
    const activeTab = document.querySelector(".tablinks.active").id;
    let status = "";

    switch (activeTab) {
      case "PendingPosts":
        status = "pending";
        break;
      case "Items":
        status = "approved";
        break;
      case "RentalRequests":
        status = "rental_request";
        break;
      case "OnTransactions":
        status = "on_transaction";
        break;
      case "Reviews":
        status = "completed";
        break;
    }

    const response = await fetch(`/api/cancel-all/${status}`, { 
      method: "DELETE",
      headers: { "Content-Type": "application/json" },
    });

    if (response.ok) {
      alert("All listings in this category have been canceled.");
      await fetchAndSortListings();
    }
  } catch (error) {
    console.error("Error canceling all listings:", error);
  }
}

// ADD EVENT LISTENER TO "CANCEL ALL" BUTTONS
document.querySelectorAll(".cancel-btn").forEach((btn) => {
  btn.addEventListener("click", cancelAllListings);
});
</script>